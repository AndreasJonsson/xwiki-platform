###
### Copy document template
###
#if(!$xwiki.hasAccessLevel("edit"))
  #template("accessdenied.vm")
#elseif($doc.isNew())
  $response.setStatus(404)
  #template("startpage.vm")
  <div class="main layoutsubsection">
  <div id="mainContentArea">
    #error($services.localization.render('core.rename.nonexistingDocument'))
  </div>## mainContentArea
  </div>## main
  #template("endpage.vm")
#else
  #template("startpage.vm")
  #template('refactoring_macros.vm')
  <div class="main layoutsubsection">
  <div id="mainContentArea">
    <div class="xcontent">
    #set ($titleToDisplay = $services.localization.render('core.copy.title',
      [$escapetool.xml($doc.plainTitle), $doc.getURL()]))
    #template('contentheader.vm')
    ##------------------------------------------------
    ## Get source reference
    ##------------------------------------------------
    #set ($sourcewiki = "$!request.sourceWikiName")
    #set ($sourcespace = "$!request.sourceSpaceName")
    #set ($sourcepage = "$!request.sourcePageName")
    ##------------------------------------------------
    ## Get target reference
    ##------------------------------------------------
    #set ($targetwiki = "$!request.targetWikiName")
    #set ($targetspace = "$!request.targetSpaceName")
    #set ($targetpage = "$!request.targetPageName")
    #set ($targetTitle = $request.targetPageTitle)
    ## Determine if the target document should be terminal.
    #isTargetDocumentTerminal($sourcepage)
    ##------------------------------------------------
    ## Get which translated pages we need to copy
    ##------------------------------------------------
    #if("$!request.language" != "" && "$!{request.language}" != 'ALL')
      #set($language = "$!{request.language}")
      #set($escapedLanguage = "$!{escapetool.xml($request.language)}")
    #end
    ##------------------------------------------------
    ## Determine if the child pages should be copied
    ##------------------------------------------------
    ## We can't copy the children if the target page is terminal.
    #set ($deep = $request.deep == 'true' && !$terminal && !$language)
    ##-------------------------------------------------------------
    ## Decide whether to perform the copy or display the copy form
    ##-------------------------------------------------------------
    #if ($sourcespace != '' && $sourcepage != '' && ($targetspace != '' || !$terminal) && $targetpage != ''
        && $services.csrf.isTokenValid($request.form_token))
      #set ($locale = $services.localization.toLocale($language))
      ## We use terminal=true here because $sourcepage has the real page name (e.g. WebHome)
      #getNestedDocumentReference($sourcewiki $sourcespace $sourcepage $locale true $sourceDocReference)
      #getNestedDocumentReference($targetwiki $targetspace $targetpage $locale $terminal $targetDocReference)
      ##-----------------------------------------------------------
      ## If the target document already exists, warn the user
      ##-----------------------------------------------------------
      #if($xwiki.exists($targetDocReference) && $!{request.overwrite} != "true")
        #warning($services.localization.render('core.copy.alreadyExists',
          [$services.model.serialize($targetDocReference, 'compactwiki')]))
        <form action="$xwiki.relativeRequestURL" id="copy" class="xform third" method="post">
          ## The field values are specified in the URL. We use POST to append the "overwrite" value.
          <input type="hidden" name="overwrite" value="true" />
          <div class="buttons">
            <span class="buttonwrapper">
              <input type="submit" value="$services.localization.render('core.copy.submit')" class="button"/>
            </span>
            <span class="buttonwrapper">
              <a class="secondary button" href="$doc.getURL('view', 'xpage=copy')">
                $services.localization.render('core.copy.changeTarget')
              </a>
            </span>
            <span class="buttonwrapper">
              <a class="secondary button" href="$doc.getURL()">$services.localization.render('core.copy.cancel')</a>
            </span>
          </div>
        </form>
      #else
        ## TODO: We should set the title specified on the request.
        #set ($success = false)
        #set ($copyAsRequest = $services.refactoring.createCopyAsRequest($sourceDocReference, $targetDocReference))
        #set ($discard = $copyAsRequest.setDeep($deep))
        #set ($copyAsJob = $services.refactoring.copyAs($copyAsRequest))
        #try()
          #set ($discard = $copyAsJob.join())
          #set ($copyAsJobStatus = $services.job.getJobStatus($copyAsJob.request.id))
          #set ($success = $copyAsJobStatus.log.getLogs('ERROR').isEmpty())
        #end
        #if ($success)
          #if($escapedLanguage)
            #set($fromurl = $xwiki.getURL($sourceDocReference, "view", "language=${escapedLanguage}"))
            #set($tourl = $xwiki.getURL($targetDocReference, "view", "language=${escapedLanguage}"))
          #else
            #set($fromurl = $xwiki.getURL($sourceDocReference))
            #set($tourl = $xwiki.getURL($targetDocReference))
          #end
          #set ($sourceDocTitle = $xwiki.getDocument($sourceDocReference).plainTitle)
          #set($sourcelink = "<a href='${fromurl}'>$!escapetool.xml($sourceDocTitle)
            #if($escapedLanguage)($escapedLanguage)#end</a>")
          #set ($targetDocTitle = $xwiki.getDocument($targetDocReference).plainTitle)
          #set($targetlink = "<a href='${tourl}'>$!escapetool.xml($targetDocTitle)</a>")
          #info($services.localization.render('core.copy.copyingdoc', [$sourcelink, $targetlink]))
        #else
          #error($services.localization.render('core.rename.targetNotWritable'))
        #end
      #end
    #else
    <form action="$xwiki.relativeRequestURL" id="copy" class="xform">
      <div class="hidden">
        ## CSRF prevention
        <input type="hidden" name="form_token" value="$!{services.csrf.getToken()}" />
        <input type="hidden" name="xpage" value="copy" />
      </div>
      <div class="row">
        <div class="col-xs-12 col-lg-6">
          <dl>
            ##------------
            ## Source Page
            ##------------
            #displaySourceDocument({
              'label': 'core.copy.source.label',
              'hint': 'core.copy.source.hint'
            })
            ##------------------
            ## Translation field
            ##------------------
            #displayTranslationSelector({
              'hint': 'core.copy.language.hint'
            })
            ##---------------
            ## Children field
            ##---------------
            #displayChildrenCheckbox({
              'label': 'core.copy.children.label',
              'hint': 'core.copy.children.hint'
            })
          </dl>
        </div>
        <div class="col-xs-12 col-lg-6">
          ##------------
          ## Target Page
          ##------------
          #template('locationPicker_macros.vm')
          #set ($parentReference = $doc.documentReference.parent)
          #set ($name = $doc.name)
          #if ($doc.name == $defaultDocumentName)
            #set ($name = $parentReference.name)
            #set ($parentReference = $parentReference.parent)
          #end
          #locationPicker({
            'id': 'target',
            'title': {
              'label': 'core.copy.target.title.label',
              'hint': 'core.copy.target.title.hint',
              'name': 'targetPageTitle',
              'value': $doc.plainTitle,
              'placeholder': 'core.create.name.placeholder'
            },
            'preview': {
              'label': 'core.copy.target.location.label',
              'hint': 'core.copy.target.location.hint'
            },
            'wiki': {
              'label': 'core.copy.target.wiki.label',
              'hint': 'core.copy.target.wiki.hint',
              'name': 'targetWikiName',
              'value': $doc.wiki
            },
            'parent': {
              'label': 'core.copy.target.parent.label',
              'hint': 'core.copy.target.parent.hint',
              'name': 'targetSpaceName',
              'reference': $parentReference,
              'placeholder': 'core.create.spaceReference.placeholder'
            },
            'name': {
              'label': 'core.copy.target.name.label',
              'hint': 'core.copy.target.name.hint',
              'name': 'targetPageName',
              'value': $name,
              'placeholder': 'core.create.name.placeholder'
            }
          })
          ## -------------------------------------
          ## Target Page Type (for advanced users)
          ## -------------------------------------
          #maybeDisplayTerminalCheckbox({
            'label': 'core.copy.target.terminal.label',
            'hint': 'core.copy.target.terminal.hint'
          })
        </div>
      </div>
      <div class="buttons">
        <span class="buttonwrapper">
          <input type="submit" value="$services.localization.render('core.copy.submit')" class="button"/>
        </span>
        <span class="buttonwrapper">
          <a class="secondary button" href="$doc.getURL()">$services.localization.render('core.copy.cancel')</a>
        </span>
      </div>
    </form>
    #end
    <div class="clearfloats"></div>
  </div>
  </div>## mainContentArea
  </div>## main
#template("endpage.vm")
#end
