###
### Rename document template
###
#if(!$xwiki.checkAccess($doc.fullName, 'delete'))
  #template("accessdenied.vm")
#elseif($doc.isNew())
  $response.setStatus(404)
  #template("startpage.vm")
  <div class="main layoutsubsection"><div id="mainContentArea">
    #error($services.localization.render('core.rename.nonexistingDocument'))
  </div></div>
  #template("endpage.vm")
#else
  #template("startpage.vm")
  ## TODO: Improve the interface, splitting the operation into more steps.
  #if("$!{step}" == '')
    #set($step = "$!{request.getParameter('step')}")
  #end
  #if("$!{step}" == '')
    #set($step = '1')
  #end
  #set($step = $mathtool.toInteger("$step"))
  <div class="main layoutsubsection">
  <div id="mainContentArea">
    #if($step == 1)
      ## Display the rename form
      #template("renameStep1.vm")
    #elseif(!${services.csrf.isTokenValid("$!{request.getParameter('form_token')}")})
      ## CSRF protection
      $response.sendRedirect("$!{services.csrf.getResubmissionURL()}")
    #else
      ## Do the rename. It's the form in renameStep1.vm page that calls this page with step=2.
      #if("$!{request.newPageName.trim()}" == '')
        $response.setStatus(400)
        #error($services.localization.render('core.rename.emptyName'))
        #template("renameStep1.vm")
      #else
        #template('refactoring_macros.vm')
        ## Determine if the new document should be terminal.
        #isTargetDocumentTerminal($doc.name)
        #getNestedDocumentReference($request.newWikiName $request.newSpaceName $request.newPageName $NULL $terminal
          $newDocReference)
        #set ($newDocReferenceAsString = $services.model.serialize($newDocReference))
        #if($xwiki.exists($newDocReference))
          $response.setStatus(409)
          #error($services.localization.render('core.rename.alreadyExists', [${escapetool.xml($newDocReferenceAsString)},
            $xwiki.getURL($newDocReference)]))
          #template("renameStep1.vm")
        #elseif(!$xwiki.hasAccessLevel('edit', $xcontext.user, $newDocReferenceAsString))
          $response.setStatus(403)
          #error($services.localization.render('core.rename.targetNotWritable',
            [${escapetool.xml($newDocReferenceAsString)}]))
          #template('renameStep1.vm')
        #else
          ## We can't rename the children if the new page is terminal.
          #set ($success = false)
          #set ($renameRequest = $services.refactoring.createRenameRequest($doc.documentReference, $newDocReference))
          #set ($deep = $request.deep == 'true' && !$terminal)
          #set ($discard = $renameRequest.setDeep($deep))
          #set ($updateLinks = $request.updateLinks == 'true')
          #set ($discard = $renameRequest.setUpdateLinks($updateLinks))
          #set ($renameJob = $services.refactoring.rename($renameRequest))
          #try()
            #set ($discard = $renameJob.join())
            #set ($renameJobStatus = $services.job.getJobStatus($renameJob.request.id))
            #set ($success = $renameJobStatus.log.getLogs('ERROR').isEmpty())
          #end
          #if ($success)
            #set ($message = $services.localization.render('core.rename.success', [
              $escapetool.xml($doc.name),
              $escapetool.xml($newDocReference.name),
              $xwiki.getURL($newDocReference),
              $escapetool.xml($doc.space),
              $escapetool.xml($services.model.serialize($newDocReference.parent))
            ]))
          #else
            #set ($message = $services.localization.render('core.rename.targetNotWritable'))
          #end
          #xwikimessageboxstart($services.localization.render('notice') $message)
          #xwikimessageboxend()
        #end
      #end
    #end
<div class="clearfloats"></div>
</div>## mainContentArea
</div>## main
#template("endpage.vm")
#end
